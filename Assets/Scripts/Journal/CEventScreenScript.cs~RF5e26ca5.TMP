using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public enum EEventScreenState
{
	Initialize,
	ImageIn,
	Disabled,
}
public class CEventScreenScript : MonoBehaviour
{
	private Vector3 m_SpriteStartPosition = new Vector3(0,0,0);
	private Vector3 m_SpriteEndPosition = new Vector3(0, 0, 0);
	public float m_SpriteSpeed = 1.0f;
	public float m_SpriteScreenOffset = 5.0f;
	private EEventScreenState m_State = EEventScreenState.Disabled;
	private GameObject m_SpriteGameObject;
	private float m_Ratio = 0.0f;
	private GameObject TitleParentGameObject;

	public void In(string SpriteGameObjectName)
	{
		m_SpriteGameObject = GameObject.Find(SpriteGameObjectName);
		m_State = EEventScreenState.Initialize;
	}

	public void InstantOut(string SpriteGameObjectName = "")
	{
		GameObject SpriteGameObject = m_SpriteGameObject;
		if(SpriteGameObjectName != "")
		{
			SpriteGameObject = GameObject.Find(SpriteGameObjectName);
		}
		SpriteGameObject.transform.position = m_SpriteStartPosition;
	}

	// Use this for initialization
	void Start()
	{
		m_SpriteEndPosition		= GameObject.Find("ReferenceEventScreen_Sprite").transform.position;
		m_SpriteStartPosition	= m_SpriteEndPosition;
		m_SpriteStartPosition.x = m_SpriteStartPosition.x + m_SpriteScreenOffset;
	}

	// Update is called once per frame
	void Update()
	{
		bool done = false;
		while (done == false)
		{
			switch (m_State)
			{
				case EEventScreenState.Initialize:
					m_Ratio = 0.0f;
					m_State = EEventScreenState.ImageIn;
					break;
				case EEventScreenState.ImageIn:
					m_Ratio += Time.deltaTime * m_SpriteSpeed;

					if(m_Ratio >= 1.0f)
					{
						m_Ratio = 1.0f;
						m_State = EEventScreenState.Disabled;
					}

					Vector3 SpritePosition = Vector3.Lerp(m_SpriteStartPosition, m_SpriteEndPosition, m_Ratio);
					m_SpriteGameObject.transform.position = SpritePosition;
					done = true;
					break;
				case EEventScreenState.Disabled:
					// Do Nothing
					done = true;
					break;
			}
		}
	}
}
